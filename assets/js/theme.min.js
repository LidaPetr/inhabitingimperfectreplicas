var container,
    controls,
    loading,
    camera,
    scene,
    renderer,
    light,
    ambientLight;
jQuery(document).ready(function () {
    $(window);
    var e = $("body");
    FastClick.attach(document.body),
    $("#toggle-menu").click(function () {
        e.toggleClass("menu-open")
    }),
    $(".langs span").click(function () {
        $(".content").addClass("hidden"),
        $("#" + $(this).attr("data-target")).removeClass("hidden")
    }),
    $("article .content iframe").each(function () {
        $(this).wrap('<div class="video-container"></div>')
    }),
    e.addClass("loaded"),
    $title_cont = $("header .left"),
    $(".grid a.item").mouseenter(function () {
        var e = $(this),
            n = [],
            t = e.attr("data-location");
        t && n.push(t);
        var a = e.attr("data-date");
        a && n.push(a);
        var i = e.attr("data-architect");
        i && n.push(i),
        $title_cont.html("<div>" + e.attr("data-name") + "</div><div>" + n.join(", ") + "</div>")
    })
        .mouseleave(function () {
            $title_cont.html("")
        }),
    $("#press-btn").click(function () {
        var e = prompt("Please enter password");
        return e && ($("#press-pass").val(e), $("#press-form").submit()),
        !1
    })
}),
Detector.webgl || Detector.addGetWebGLMessage();
var onError = function (e) {
        alert(e)
    },
    onProgress = function (e) {
        var n = Math.ceil(.001 * e.loaded);
        loading.textContent = 1e3 < n
            ? (.001 * n).toFixed(2) + "Mb"
            : n + "kb"
    },
    init3d = function (e,a) {
        (loading = document.createElement("div"))
            .classList
            .add("loading"),
        document
            .body
            .appendChild(loading),
        (container = document.createElement("div"))
            .classList
            .add("scene"),
        document
            .body
            .appendChild(container),
        (renderer = new THREE.WebGLRenderer).setClearColor(16777215, 1),
        renderer.setPixelRatio(window.devicePixelRatio),
        renderer.setSize(window.innerWidth, window.innerHeight),
        container.appendChild(renderer.domElement),
        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2e4),
        420 < window.innerWidth
            ? camera
                .position
                .set(-41, 36, 54)
            : camera
                .position
                .set(-98, 80, 130),
        (controls = new THREE.OrbitControls(camera, renderer.domElement))
            .target
            .set(0, 5, 0),
        controls.update(),
        scene = new THREE.Scene,
        scene.background = new THREE.Color( 0x1C1C1C );
        ambientLight = new THREE.AmbientLight(16777215, .4),
        scene.add(ambientLight),
        light = new THREE.DirectionalLight(16777215, .45),
        camera.add(light),
        scene.add(camera),
        (new THREE.OBJLoader).load(e, function (e) {
            loading.textContent = "",
            e.traverse(function (e) {
                e instanceof THREE.Mesh && (e.material.depthWrite = !0, e.material.side = THREE.DoubleSide)
            }),
            e.scale.x = a,
            e.scale.y = a,
            e.scale.z = a,
            scene.add(e);
            console.log(e.scale.x)
        }, onProgress, onError),
        window.addEventListener("resize", function () {
            camera.aspect = window.innerWidth / window.innerHeight,
            camera.updateProjectionMatrix(),
            renderer.setSize(window.innerWidth, window.innerHeight)
        }, !1),
        animate()
    },
    animate = function () {
        requestAnimationFrame(animate),
        renderer.render(scene, camera)
    };